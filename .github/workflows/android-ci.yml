name: Android CI (Fixed SDK)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  ANDROID_HOME: ${{ github.workspace }}/android-sdk
  CMDLINE_TOOLS_VERSION: 9477386
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: chmod +x gradlew

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install Android SDK
        timeout-minutes: 15
        run: |
          # 创建SDK目录
          mkdir -p $ANDROID_HOME

          # 下载命令行工具
          cd $ANDROID_HOME
          curl -L -o cmdline-tools.zip \
            https://dl.google.com/android/repository/commandlinetools-mac-${CMDLINE_TOOLS_VERSION}_latest.zip
          unzip -q cmdline-tools.zip -d cmdline-tools
          rm cmdline-tools.zip
          mv cmdline-tools/cmdline-tools cmdline-tools/latest

          # 设置环境变量
          echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

          # 接受许可协议
          yes | sdkmanager --licenses > /dev/null

      - name: Install Platform Tools
        run: |
          sdkmanager --verbose \
            "platform-tools" \
            "emulator" \
            "patcher;v4"

      - name: Build APK
        run: |
          ./gradlew assembleDebug
          ls -lh app/build/outputs/apk/debug/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  emulator-test:
    name: Emulator Test (API ${{ matrix.api-level }})
    needs: build
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29, 30, 31]
        target: [google_apis]
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: .

      - name: Install System Image
        run: |
          sdkmanager --install "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd \
            --name "ci_avd_${{ matrix.api-level }}" \
            --package "system-images;android-${{ matrix.api-level }};${{ matrix.target }};x86_64" \
            --abi "x86_64"

      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator \
            -avd ci_avd_${{ matrix.api-level }} \
            -port 5586 \
            -no-audio \
            -no-snapshot \
            -gpu swiftshader_indirect \
            -memory 2048 \
            -netdelay none \
            -netspeed full &
          EMULATOR_PID=$!

          # 等待设备就绪
          adb wait-for-device
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -q 1; then
              break
            fi
            sleep 10
          done

          # 解锁屏幕
          adb shell input keyevent 82

      - name: Run Tests
        timeout-minutes: 20
        run: |
          adb install -t -g app-debug.apk
          ./gradlew connectedDebugAndroidTest \
            --stacktrace \
            --no-daemon \
            -Pandroid.testOptions.animationsDisabled=true

      - name: Collect Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-api-${{ matrix.api-level }}
          path: |
            app/build/reports/androidTests/connected/
            app/build/outputs/androidTest-results/

  deploy:
    name: Deploy
    needs: [build, emulator-test]
    runs-on: ubuntu-latest
    steps:
      - name: Completion Check
        run: echo "All tests passed successfully!"
