name: Android CI (minSdk24)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  FIREBASE_PROJECT: "your-project-id"

jobs:
  build:
    name: Build & Test
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: chmod +x gradlew

      - name: Verify minSdkVersion
        run: |
          MIN_SDK=$(grep 'minSdkVersion' app/build.gradle | awk '{print $2}')
          if [ $MIN_SDK -lt 24 ]; then
            echo "Error: minSdkVersion must be >= 24"
            exit 1
          fi

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle.properties') }}

      - name: Build & Test
        run: |
          ./gradlew clean
          ./gradlew assembleDebug check

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  compatibility-test:
    name: Emulator Matrix Test (API24+)
    needs: build
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [24, 25, 28, 29, 30]
        arch: [x86_64]
        include:
          - api-level: 24
            target: google_apis
          - api-level: 25
            target: default
          - api-level: 28
            target: google_apis_playstore
          - api-level: 29
            target: google_apis
          - api-level: 30
            target: google_apis
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: .

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          profile: Nexus 6
          disable-animations: true
          emulator-options: -no-audio -no-snapshot -no-window -gpu swiftshader_indirect
          boot-timeout: 600
          script: |
            # ÈáçÁΩÆADBËøûÊé•
            adb kill-server
            adb start-server

            # Á≠âÂæÖËÆæÂ§áËøûÊé•
            echo "‚è≥ Á≠âÂæÖËÆæÂ§áËøûÊé•..."
            adb wait-for-device
            
            # Á≠âÂæÖÁ≥ªÁªüÂÆåÂÖ®ÂêØÂä®
            echo "‚è≥ Á≠âÂæÖÁ≥ªÁªüÂêØÂä®ÂÆåÊàê..."
            adb shell 'while [[ -z "$(getprop sys.boot_completed)" ]]; do sleep 2; done'
            
            # Ëß£ÈîÅÂ±èÂπï
            echo "üñ• Ëß£ÈîÅÂ±èÂπï..."
            adb shell input keyevent 82
            
            # ÂÆâË£ÖAPKÔºàÂ∏¶ÈáçËØïÊú∫Âà∂Ôºâ
            echo "üì¶ ÂÆâË£ÖAPK..."
            for i in {1..3}; do
              adb install -t -g app-debug.apk && break || sleep 15
              echo "‚ö†Ô∏è ÂÆâË£ÖÂ§±Ë¥•ÔºåÁ¨¨$iÊ¨°ÈáçËØï..."
            done
            
            # È™åËØÅÂÆâË£Ö
            echo "‚úÖ Â∑≤ÂÆâË£ÖÂåÖÂàóË°®Ôºö"
            adb shell pm list packages | grep your.package.name
            
            # ÊâßË°åÊµãËØï
            echo "üß™ ÂºÄÂßãÊâßË°åÊµãËØï..."
            ./gradlew connectedDebugAndroidTest \
              --no-daemon \
              --console=plain \
              --stacktrace \
              -Pandroid.testInstrumentationRunnerArguments.annotation=androidx.test.filters.FlakyTest

      - name: Collect Results
        if: ${{ always() }}
        run: |
          mkdir -p test-results/${{ matrix.api-level }}
          cp -r app/build/reports/androidTests/connected/* test-results/${{ matrix.api-level}}/ || echo "Êú™ÊâæÂà∞HTMLÊä•Âëä"
          cp -r app/build/outputs/androidTest-results/connected/* test-results/${{ matrix.api-level}}/ || echo "Êú™ÊâæÂà∞XMLÊä•Âëä"
          
          # Êî∂ÈõÜADBÊó•Âøó
          adb logcat -d > test-results/${{ matrix.api-level}}/adb_logcat.log

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-api-${{ matrix.api-level }}
          path: test-results/${{ matrix.api-level }}

  enhanced-compatibility:
    name: Enhanced Compatibility Checks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: chmod +x gradlew

      - name: Architecture Validation
        run: |
          if ! grep -q "ndk\s*{" app/build.gradle || ! grep -q "abiFilters" app/build.gradle; then
            echo "‚ùå Missing 64-bit ABI configuration!"
            exit 1
          fi
          
          if ! grep -qE "'arm64-v8a'|'x86_64'" app/build.gradle; then
            echo "‚ùå Missing 64-bit ABI in filters!"
            exit 1
          fi
          
          if [ $(grep -c 'multiDexEnabled true' app/build.gradle) -eq 0 ]; then
            echo "‚ùå Missing multidex configuration!"
            exit 1
          fi

      - name: Run Static Analysis
        run: |
          ./gradlew checkApiCompatibility -PminSdk=24
          ./gradlew errorprone
          ./gradlew lintDebug --scan

      - name: Upload Compatibility Report
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-reports
          path: app/build/reports/
