name: Android CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    name: Android Build & Test
    runs-on: macos-latest
    timeout-minutes: 30
    permissions:
      checks: write
      contents: read
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: |
          chmod +x gradlew
          git ls-tree -r HEAD --name-only | xargs -I {} sh -c 'if [ -x "{}" ]; then chmod +x "{}"; fi'

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Android Lint
        run: ./gradlew lintDebug
        continue-on-error: true

      - name: Generate HTML Lint Report
        run: ./gradlew lintReportDebug

      - name: Upload Lint HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: lint-html-report
          path: app/build/reports/lint-results-debug.html

      - name: Build with Gradle
        run: ./gradlew assembleDebug check

      - name: Generate Test Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload Test Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: app/build/reports/jacoco/jacocoTestReport/html/

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'app/build/test-results/**/*.xml'
          check_name: "📱 Android Tests"
          annotations_title: "🔍 Test Issues"
          detailed_summary: true
          format: "detailed"
          annotations: all

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Check Dependency Updates
        run: |
          ./gradlew dependencyUpdates -Drevision=release || echo "Dependency check completed"
          cat app/build/dependencyUpdates/report.txt

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Set up Gradle
        run: chmod +x gradlew

      - name: Get version name
        id: get-version
        run: |
          version_name=$(./gradlew -q getVersionName)
          echo "version_name=$version_name" >> $GITHUB_OUTPUTS

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.version_name }}
          release_name: Release ${{ steps.get-version.outputs.version_name }}
          draft: false
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
