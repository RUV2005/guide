name: Android CI (minSdk24)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  FIREBASE_PROJECT: "your-project-id"

jobs:
  build:
    name: Build & Test
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: chmod +x gradlew

      - name: Verify minSdkVersion
        run: |
          MIN_SDK=$(grep 'minSdkVersion' app/build.gradle | awk '{print $2}')
          if [ $MIN_SDK -lt 24 ]; then
            echo "Error: minSdkVersion must be >= 24"
            exit 1
          fi

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle.properties') }}

      - name: Build & Test
        run: |
          ./gradlew clean
          ./gradlew assembleDebug check

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  compatibility-test:
    name: Emulator Matrix Test (API24+)
    needs: build
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [24, 25, 28, 29, 30]
        arch: [x86_64]
        include:
          - api-level: 24
            target: google_apis
          - api-level: 25
            target: default
          - api-level: 28
            target: google_apis_playstore
          - api-level: 29
            target: google_apis
          - api-level: 30
            target: google_apis
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: debug-apk
          path: .

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Initialize Android Environment
        run: |
          echo "üîÑ ÈáçÁΩÆAndroidÁéØÂ¢É..."
          rm -rf ~/.android/avd/*
          rm -rf ~/.android/adb*
          mkdir -p ~/.android

      - name: Start Android Emulator
        timeout-minutes: 20
        run: |
          # ÂÆâË£ÖÂøÖË¶ÅÁªÑ‰ª∂
          sdkmanager "system-images;android-${{ matrix.api-level }};google_apis;x86_64"
          sdkmanager --install "emulator"

          # ÂàõÂª∫AVD
          echo "no" | avdmanager create avd \
            --name "ci_avd_${{ matrix.api-level }}" \
            --package "system-images;android-${{ matrix.api-level }};google_apis;x86_64" \
            --abi google_apis/x86_64 \
            --device "Nexus 6"

          # ÂêØÂä®Ê®°ÊãüÂô®
          emulator @ci_avd_${{ matrix.api-level}} \
            -port 5554 \
            -no-audio \
            -no-snapshot \
            -no-window \
            -gpu swiftshader_indirect \
            -no-boot-anim \
            -memory 2048 \
            -cache-size 2048 \
            -qemu -enable-kvm &
          EMULATOR_PID=$!

          # Á≠âÂæÖËÆæÂ§áËøûÊé•
          echo "‚è≥ Á≠âÂæÖËÆæÂ§á‰∏äÁ∫ø..."
          adb wait-for-device
          
          # Á≠âÂæÖÁ≥ªÁªüÂêØÂä®ÂÆåÊàê
          echo "‚è≥ Á≠âÂæÖÁ≥ªÁªüÂêØÂä®..."
          for i in {1..30}; do
            if adb shell getprop sys.boot_completed | grep -q 1; then
              echo "‚úÖ Á≥ªÁªüÂêØÂä®ÂÆåÊàê"
              break
            fi
            echo "‚è≥ ÂêØÂä®ËøõÂ∫¶Ê£ÄÊü• ($i/30)..."
            sleep 10
          done

          # Ëß£ÈîÅÂ±èÂπï
          adb shell input keyevent 82

          # È™åËØÅËÆæÂ§áÁä∂ÊÄÅ
          echo "üì± ËÆæÂ§á‰ø°ÊÅØÔºö"
          adb shell getprop

      - name: Install APK
        run: |
          # Â∏¶MD5Ê†°È™åÁöÑÂÆâË£Ö
          APK_MD5=$(md5 -q app-debug.apk)
          echo "üì¶ ÂÆâË£ÖAPK (MD5: $APK_MD5)..."
          adb install -t -g app-debug.apk

      - name: Run Instrumentation Tests
        run: |
          ./gradlew connectedDebugAndroidTest \
            --no-daemon \
            --stacktrace \
            --scan \
            -Pandroid.testOptions.animationsDisabled=true

      - name: Collect Diagnostics
        if: ${{ always() }}
        run: |
          mkdir -p diagnostics
          adb logcat -d > diagnostics/logcat.log
          adb bugreport diagnostics/bugreport.zip
          adb shell dumpsys window > diagnostics/window_dump.txt
          ps aux > diagnostics/process_list.txt

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-api-${{ matrix.api-level }}
          path: |
            app/build/reports/androidTests/connected/
            diagnostics/

  enhanced-compatibility:
    name: Enhanced Compatibility Checks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set gradlew executable
        run: chmod +x gradlew

      - name: Architecture Validation
        run: |
          if ! grep -q "ndk\s*{" app/build.gradle || ! grep -q "abiFilters" app/build.gradle; then
            echo "‚ùå Missing 64-bit ABI configuration!"
            exit 1
          fi
          
          if ! grep -qE "'arm64-v8a'|'x86_64'" app/build.gradle; then
            echo "‚ùå Missing 64-bit ABI in filters!"
            exit 1
          fi
          
          if [ $(grep -c 'multiDexEnabled true' app/build.gradle) -eq 0 ]; then
            echo "‚ùå Missing multidex configuration!"
            exit 1
          fi

      - name: Run Static Analysis
        run: |
          ./gradlew checkApiCompatibility -PminSdk=24
          ./gradlew errorprone
          ./gradlew lintDebug --scan

      - name: Upload Compatibility Report
        uses: actions/upload-artifact@v4
        with:
          name: compatibility-reports
          path: app/build/reports/
