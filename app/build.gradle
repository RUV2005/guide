plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    id "com.github.ben-manes.versions" version "0.51.0"
    id 'jacoco'
    id("com.android.application")

    // Add the Google services Gradle plugin
    id("com.google.gms.google-services")

}
jacoco {
    toolVersion = "0.8.11"
}
tasks.register('jacocoTestReport', JacocoReport) {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    sourceDirectories.from = files(["src/main/java"])
    classDirectories.from = files(fileTree(dir: "build/intermediates/javac/debug/classes"))
    executionData.from = files("build/jacoco/testDebugUnitTest.exec")
}
android {
    android.buildFeatures.buildConfig true
    namespace 'com.danmo.guide'
    compileSdk 35
    defaultConfig {
        applicationId "com.danmo.guide"
        minSdk 24
        //noinspection OldTargetApi
        targetSdk 34
        versionCode 2
        versionName "1.0.1"
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'arm64-v8a'
        }
        lintOptions {
            htmlReport true
            xmlReport true
            htmlOutput layout.buildDirectory.file("reports/lint-results.html").get().asFile
        }
        multiDexEnabled true // 启用 multidex
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true          // 删除无用资源
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "IPDATA_API_KEY", "\"2e5588b836580a8dddab84752f4be981f293033ff17909963e4993f2\""
            buildConfigField "String", "OPENWEATHER_API_KEY", "\"e50c756f96b046b54d6fdf60a941413a\""
        }
        debug {
            buildConfigField "String", "IPDATA_API_KEY", "\"2e5588b836580a8dddab84752f4be981f293033ff17909963e4993f2\""
            buildConfigField "String", "OPENWEATHER_API_KEY", "\"e50c756f96b046b54d6fdf60a941413a\""
            packagingOptions {
                doNotStrip '*/armeabi/*.so'
                doNotStrip '*/armeabi-v7a/*.so'
                doNotStrip '*/arm64-v8a/*.so'
                doNotStrip '*/x86/*.so'
                doNotStrip '*/x86_64/*.so'
            }
        }
    }

// app/build.gradle 的 android {} 块里添加
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        viewBinding true
        mlModelBinding true// 启用 View Binding
    }
    aaptOptions {
        noCompress "tflite"
    }
    packagingOptions {
        exclude '**/libtensorflowlite*.so'
        pickFirst 'lib/arm64-v8a/libtensorflowlite.so'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
}
dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3

    // 基础库
    implementation libs.androidx.appcompat

    // Compose
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3

    // CameraX
    implementation libs.androidx.camera.core
    implementation libs.androidx.camera.camera2
    implementation libs.androidx.camera.lifecycle
    implementation libs.androidx.camera.view

    // TensorFlow Lite —— 统一使用旧版，避免 LiteRT 冲突
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'org.tensorflow:tensorflow-lite:2.13.0'
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.4'
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.13.0'
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.4.4'
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'org.tensorflow:tensorflow-lite-gpu-delegate-plugin:0.4.4'

    // 其他三方库
    //noinspection UseTomlInstead,Aligned16KB
    implementation 'com.volcengine:volcengine-java-sdk-ark-runtime:0.2.20'
    implementation libs.vosk
    implementation libs.jna
    implementation libs.material
    implementation libs.okhttp
    implementation libs.gson
    implementation files('libs/AMapLocation_6.4.9_20241226.aar')
    implementation libs.oboe
    implementation libs.media3.exoplayer
    implementation libs.androidx.constraintlayout
    implementation libs.tensorflow.lite.metadata
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.multidex


    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:34.0.0"))


    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation("com.google.firebase:firebase-analytics")


    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    // 测试
    testImplementation project(':app')        // 依赖自身
    androidTestImplementation project(':app') // 依赖自身
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}
